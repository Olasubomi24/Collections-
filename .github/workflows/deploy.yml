name: Deploy CodeIgniter to Ubuntu
on:
  push:
    branches: [main]
jobs:
  deploy:
    runs-on: [self-hosted, Linux, X64, macrotech-actions-runner]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install PHP 7.4
      run: |
        echo "Current PHP version:"
        php -v
        
        # Check if PHP 7.4 is already installed
        if command -v php7.4 &> /dev/null; then
          echo "PHP 7.4 is already installed"
        else
          echo "Installing PHP 7.4..."
          # Add PPA for multiple PHP versions
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:ondrej/php
          sudo apt-get update
          
          # Install PHP 7.4 and necessary extensions for CodeIgniter
          sudo apt-get install -y php7.4 php7.4-cli php7.4-common php7.4-json php7.4-opcache php7.4-mysql php7.4-mbstring php7.4-zip php7.4-fpm php7.4-xml php7.4-curl
        fi
        
        # Verify PHP 7.4 installation
        php7.4 -v
      
    - name: Install Composer
      run: |
        # Check if Composer is installed
        if ! command -v composer &> /dev/null; then
          echo "Installing Composer..."
          curl -sS https://getcomposer.org/installer | php7.4
          sudo mv composer.phar /usr/local/bin/composer
        fi
        
        # Verify Composer installation
        composer --version
        
    - name: Install Dependencies
      run: |
        # Use PHP 7.4 with Composer
        php7.4 $(which composer) install --prefer-dist --no-progress --no-dev
        
    - name: Deploy Application
      run: |
        # Create deployment directory if it doesn't exist
        sudo mkdir -p /var/www/collection-frontend
        
        # Copy application files to deployment directory
        sudo rsync -avz --exclude='.git' --exclude='.github' --exclude='node_modules' --delete ./ /var/www/collection-frontend/
        
        # Navigate to deployment directory
        cd /var/www/collection-frontend
        
        # Install dependencies with PHP 7.4
        php7.4 $(which composer) install --no-dev --optimize-autoloader
        
        # Set permissions
        sudo chmod -R 755 writable
        sudo chown -R www-data:www-data writable
        
    - name: Configure and Restart Services
      run: |
        # Check if nginx.conf exists in the current directory
        if [ -f nginx.conf ]; then
          # Nginx config
          [ ! -f /etc/nginx/conf.d/collection-frontend.conf ] && sudo cp nginx.conf /etc/nginx/conf.d/ || echo "Nginx config already exists"
          
          # Validate and reload Nginx
          sudo nginx -t && sudo systemctl reload nginx
        else
          echo "Warning: nginx.conf not found in repository"
        fi
        
        # Make sure PHP 7.4-FPM is running
        sudo systemctl restart php7.4-fpm
