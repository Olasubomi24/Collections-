name: Deploy CodeIgniter to Ubuntu
on:
  push:
    branches: [main]
jobs:
  deploy:
    runs-on: [self-hosted, Linux, X64, macrotech-actions-runner]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Verify PHP 7.4
      run: |
        # Verify PHP 7.4 is installed and working
        php7.4 -v
        
        # Check PHP-FPM status
        sudo systemctl status php7.4-fpm
      
    - name: Install Composer
      run: |
        # Check if Composer is installed
        if ! command -v composer &> /dev/null; then
          echo "Installing Composer..."
          curl -sS https://getcomposer.org/installer | php7.4
          sudo mv composer.phar /usr/local/bin/composer
        fi
        
        # Verify Composer installation
        composer --version
        
    - name: Install Dependencies
      run: |
        # Use PHP 7.4 with Composer explicitly
        php7.4 $(which composer) install --prefer-dist --no-progress --no-dev
        
    - name: Deploy Application
      run: |
        # Create deployment directory if it doesn't exist
        sudo mkdir -p /var/www/collection-frontend
        
        # Copy application files to deployment directory
        sudo rsync -avz --exclude='.git' --exclude='.github' --exclude='node_modules' --delete ./ /var/www/collection-frontend/
        
        # Navigate to deployment directory
        cd /var/www/collection-frontend
        
        # Install dependencies with PHP 7.4
        php7.4 $(which composer) install --no-dev --optimize-autoloader
        
        # Set permissions
        sudo chmod -R 755 writable
        sudo chown -R www-data:www-data writable
        
    - name: Configure Nginx
      run: |
        # Check if nginx.conf exists in the current directory
        if [ -f nginx.conf ]; then
          # Nginx config
          if [ ! -f /etc/nginx/conf.d/collection-frontend.conf ]; then
            sudo cp nginx.conf /etc/nginx/conf.d/collection-frontend.conf
            echo "Nginx configuration copied to /etc/nginx/conf.d/"
          else
            echo "Nginx config already exists"
          fi
          
          # Validate Nginx configuration
          echo "Validating Nginx configuration..."
          sudo nginx -t
          
          # If validation successful, reload Nginx
          if [ $? -eq 0 ]; then
            echo "Reloading Nginx..."
            sudo systemctl reload nginx
          else
            echo "Nginx configuration is invalid, not reloading"
            exit 1
          fi
        else
          echo "Warning: nginx.conf not found in repository"
        fi
        
    - name: Configure PHP-FPM
      run: |
        # Make sure the correct PHP-FPM version is running
        echo "Restarting PHP 7.4-FPM..."
        sudo systemctl restart php7.4-fpm
        
        # Verify PHP-FPM is running
        sudo systemctl status php7.4-fpm
        
        echo "Deployment complete!"
